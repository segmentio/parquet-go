#ifndef PARQUET_GO_INTERNAL_BITS_MAX_AMD64
#define PARQUET_GO_INTERNAL_BITS_MAX_AMD64

// vpmaxu128 is a macro comparing unsigned 128 bits values held in the
// `srcValues` and `maxValues` vectors. The `srcIndexes` and `maxIndexes`
// vectors contain the indexes of elements in the value vectors. Remaining
// K and R arguments are mask and general purpose registers needed to hold
// temporary values during the computation. The last M argument is a mask
// generated by vpmaxu128mask.
//
// The routine uses AVX-512 instructions (VPCMPUQ, VPBLENDMQ) to implement
// the comparison of 128 bits values. The values are expected to be stored
// in the vectors as a little-endian pair of two consecutive quad words.
//
// The results are written to the `maxValues` and `maxIndexes` vectors,
// overwriting the inputs. `srcValues` and `srcIndexes` are read-only
// parameters.
//
// At a high level, for two pairs of quard words formaxg two 128 bits values
// A and B, the test implemented by this macro is:
//
//   A[1] > B[1] || (A[1] == B[1] && A[0] > B[0])
//
// Values in the source vector that evalute to true on this expression are
// written to the vector of maximum values, and their indexes are written to
// the vector of indexes.
#define vpmaxu128(srcValues, srcIndexes, maxValues, maxIndexes, K1, K2, R1, R2, R3, M) \
    VPCMPUQ $0, maxValues, srcValues, K1 \
    VPCMPUQ $6, maxValues, srcValues, K2 \
    KMOVQ K1, R1 \
    KMOVQ K2, R2 \
    MOVQ R2, R3 \
    SHLQ $1, R3 \
    ANDQ R3, R1 \
    ORQ R2, R1 \
    ANDQ M, R1 \
    MOVQ R1, R2 \
    SHRQ $1, R2 \
    ORQ R2, R1 \
    KMOVQ R1, K1 \
    VPBLENDMQ srcValues, maxValues, K1, maxValues \
    VPBLENDMQ srcIndexes, maxIndexes, K1, maxIndexes

// vpmaxu128mask is a macro used to initialize the mask passed as last argument
// to vpmaxu128. The argument M is intended to be a general purpose register.
//
// The bit mask is used to merge the results of the "greater than" and "equal"
// comparison that are performed on each lane of maximum vectors. The upper bits
// are used to compute results of the operation to determaxes which of the pairs
// of quad words representing the 128 bits elements are the maximums.
#define vpmaxu128mask(M) MOVQ $0b10101010, M

#endif
